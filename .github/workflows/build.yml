name: Build & Test

on:
  pull_request:
    branches:
      - 'trunk'

  push:
    branches:
      - 'trunk'

    tags:
      - 'v*.*.*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2.2.0

      - name: Install i686 gcc
        run: sudo apt-get update --fix-missing && sudo apt-get install gcc-mingw-w64 -y

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Update toolchains
        run: |
          rustup target add x86_64-pc-windows-gnu
          rustup target add i686-pc-windows-gnu

      - name: Build and Package
        shell: pwsh
        run: ./generate-release.ps1

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: package.zip
          path: release/*

      - name: Upload & Publish
        uses: softprops/action-gh-release@v0.1.15
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/*.7z*

      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          update_release_body: true
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            release/*.7z$

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2.2.0

      - name: Install i686 gcc
        run: sudo apt-get update && sudo apt-get install gcc-mingw-w64 -y

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build and Test
        run: cargo test
